---
name: CI pipeline

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.12.2]
        erlang: [24.0.5]
        os: [ubuntu-focal-20210325]
    container:
      image: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.erlang }}-${{ matrix.os }}
    outputs:
      cache_timestamp: ${{ steps.date.outputs.timestamp }}
    steps:
      - uses: actions/checkout@v2
      - name: Get current timestamp
        id: date
        run: echo "::set-output name=timestamp::$(date +'%s%3N')"
      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.mix
            _build
            deps
          key: build-v0-${{ hashFiles('mix.lock') }}-${{ steps.date.outputs.timestamp }}
          restore-keys: |
            build-v0-${{ hashFiles('mix.lock') }}-
            build-v0-
      - name: Get dependencies
        run: |
          rm -rf ~/.mix/*
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
      - name: Compile project
        run: |
          mix compile --warnings-as-errors
          MIX_ENV=test mix compile
      - name: Restore dialyzer cache
        uses: actions/cache@v2
        with:
          path: priv/plts
          key: plts-v0-${{ matrix.erlang }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            plts-v0-${{ matrix.erlang }}-${{ matrix.elixir }}-
      - name: Build PLTs
        run: mix dialyzer --plt
  code-analysis:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.12.2]
        erlang: [24.0.5]
        os: [ubuntu-focal-20210325]
    container:
      image: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.erlang }}-${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.mix
            _build
            deps
          key: build-v0-${{ hashFiles('mix.lock') }}-${{ needs.build.outputs.cache_timestamp }}
      - name: Check code formatting
        run: mix format --check-formatted
      - name: Run Credo
        run: mix credo -a
      - name: Restore dialyzer cache
        uses: actions/cache@v2
        with:
          path: priv/plts
          key: plts-v0-${{ matrix.erlang }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}
      - name: Run dialyzer
        run: mix dialyzer --format short
  test:
    needs: [build, code-analysis]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.12.2]
        erlang: [24.0.5]
        os: [ubuntu-focal-20210325]
    container:
      image: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.erlang }}-${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.mix
            _build
            deps
          key: build-v0-${{ hashFiles('mix.lock') }}-${{ needs.build.outputs.cache_timestamp }}
      - name: Run tests
        run: mix test
  test-e2e:
    needs: [build, code-analysis]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.12.2]
        erlang: [24.0.5]
        os: [ubuntu-focal-20210325]
    container:
      image: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.erlang }}-${{ matrix.os }}
    steps:
      - name: Install chromedriver from official Ubuntu 18.04 sources
        run: |
          echo "deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe" >> /etc/apt/sources.list.d/bionic-updates.list
          cat <<EOF | tee /etc/apt/preferences.d/chromium-deb-bionic-updates
          Package: chromium-browser chromium-browser-l10n chromium-chromedriver chromium-codecs-ffmpeg chromium-codecs-ffmpeg-extra
          Pin: release a=bionic-updates
          Pin-Priority: 900
          EOF
          apt update
          apt install -y chromium-browser chromium-chromedriver
        env:
          DEBIAN_FRONTEND: noninteractive
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.5.0'
      - uses: actions/checkout@v2
      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.mix
            _build
            deps
          key: build-v0-${{ hashFiles('mix.lock') }}-${{ needs.build.outputs.cache_timestamp }}
      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-v0-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-v0-
      - name: Bundle static assets
        run: |
          cd apps/heroes_web/assets
          npm install --unsafe-perm
          npm run deploy
      - name: Run tests
        run: mix test --only browser:true
